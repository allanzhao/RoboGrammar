digraph make_robot {
  subgraph L {
    robot [label="robot"];
  }

  subgraph R {
    hub [label="hub"];
    front_ext [label="ext"];
    back_ext [label="ext"];
    hub -> front_ext [type=fixed, offset=0.0, axis_angle="0 1 0 180",
                      mirror=true];
    hub -> back_ext [type=fixed, offset=1.0];
  }
}

digraph cont_ext {
  subgraph L {
    ext [label="ext"];
    parent -> ext [id="parent_edges"];
  }

  subgraph R {
    link [shape=capsule, length=0.15, radius=0.025];
    limb_mount [label="limb_mount", shape=capsule, length=0.1, radius=0.025];
    limb [label="limb"];
    parent -> link [id="parent_edges"];
    link -> ext [type=fixed, offset=1.0];
    link -> limb_mount [type=fixed, offset=1.0, axis_angle="0 1 0 90"];
    link -> limb_mount [type=fixed, offset=1.0, axis_angle="0 1 0 90",
                        mirror=true];
    limb_mount -> limb;
  }
}

digraph cont_ext_swing {
  subgraph L {
    ext [label="ext"];
    parent -> ext [id="parent_edges"];
  }

  subgraph R {
    link1 [shape=capsule, length=0.075, radius=0.025];
    link2 [shape=capsule, length=0.075, radius=0.025];
    limb_mount [label="limb_mount", shape=capsule, length=0.1, radius=0.025];
    limb [label="limb"];
    parent -> link1 [id="parent_edges"];
    link1 -> link2 [type=hinge, offset=1.0, joint_axis="0 1 0",
                    color="0 0.5 0"];
    link2 -> ext [type=fixed, offset=1.0];
    link2 -> limb_mount [type=fixed, offset=1.0, axis_angle="0 1 0 90"];
    link2 -> limb_mount [type=fixed, offset=1.0, axis_angle="0 1 0 90",
                         mirror=true];
    limb_mount -> limb;
  }
}

digraph cont_ext_lift {
  subgraph L {
    ext [label="ext"];
    parent -> ext [id="parent_edges"];
  }

  subgraph R {
    link1 [shape=capsule, length=0.075, radius=0.025];
    link2 [shape=capsule, length=0.075, radius=0.025];
    limb_mount [label="limb_mount", shape=capsule, length=0.1, radius=0.025];
    limb [label="limb"];
    parent -> link1 [id="parent_edges"];
    link1 -> link2 [type=hinge, offset=1.0, joint_axis="0 0 1"];
    link2 -> ext [type=fixed, offset=1.0];
    link2 -> limb_mount [type=fixed, offset=1.0, axis_angle="0 1 0 90"];
    link2 -> limb_mount [type=fixed, offset=1.0, axis_angle="0 1 0 90",
                         mirror=true];
    limb_mount -> limb;
  }
}

digraph end_ext {
  subgraph L {
    ext [label="ext"];
    parent -> ext [id="parent_edges"];
  }

  subgraph R {
    parent;
  }
}

digraph make_2_leg_hub {
  subgraph L {
    hub [label="hub"];
    hub -> child1 [id="child1_edges", offset=0.0, axis_angle="0 1 0 180"];
    hub -> child2 [id="child2_edges"];
  }

  subgraph R {
    link [shape=capsule, length=0.3, density=5.0, base=true];
    limb_mount [label="limb_mount", shape=capsule, length=0.1, radius=0.025];
    limb [label="limb"];
    link -> child1 [id="child1_edges", offset=0.0, axis_angle="0 1 0 180"];
    link -> child2 [id="child2_edges"];
    link -> limb_mount [type=fixed, offset=0.5, axis_angle="0 1 0 90"];
    link -> limb_mount [type=fixed, offset=0.5, axis_angle="0 1 0 90",
                        mirror=true];
    limb_mount -> limb;
  }
}

digraph make_4_leg_hub {
  subgraph L {
    hub [label="hub"];
    hub -> child1 [id="child1_edges", offset=0.0, axis_angle="0 1 0 180"];
    hub -> child2 [id="child2_edges"];
  }

  subgraph R {
    link [shape=capsule, length=0.3, density=5.0, base=true];
    limb_mount1 [label="limb_mount", shape=capsule, length=0.1, radius=0.025];
    limb_mount2 [label="limb_mount", shape=capsule, length=0.1, radius=0.025];
    limb1 [label="limb"];
    limb2 [label="limb"];
    link -> child1 [id="child1_edges", offset=0.0, axis_angle="0 1 0 180"];
    link -> child2 [id="child2_edges"];
    link -> limb_mount1 [type=fixed, offset=0.0, axis_angle="0 1 0 90"];
    link -> limb_mount1 [type=fixed, offset=0.0, axis_angle="0 1 0 90",
                         mirror=true];
    link -> limb_mount2 [type=fixed, offset=1.0, axis_angle="0 1 0 90"];
    link -> limb_mount2 [type=fixed, offset=1.0, axis_angle="0 1 0 90",
                         mirror=true];
    limb_mount1 -> limb1;
    limb_mount2 -> limb2;
  }
}

digraph make_no_limb {
  subgraph L {
    limb_mount [label="limb_mount"];
    limb [label="limb"];
    parent -> limb_mount -> limb;
  }

  subgraph R {
    parent;
  }
}

digraph cont_limb {
  subgraph L {
    limb [label="limb"];
    parent -> limb [id="parent_edges"];
  }

  subgraph R {
    segment [label="segment"];
    parent -> segment [id="parent_edges"];
    segment -> limb;
  }
}

digraph end_limb {
  subgraph L {
    limb [label="limb"];
    parent -> limb [id="parent_edges"];
  }

  subgraph R {
    segment [label="segment"];
    foot [shape=capsule, length=0.05, radius=0.025];
    parent -> segment [id="parent_edges"];
    segment -> foot [type=fixed];
  }
}

digraph make_left_roll_segment {
  subgraph L {
    segment [label="segment"];
    parent -> segment;
    segment -> child [id="child_edges"];
  }

  subgraph R {
    seg_link [label="segment_link"];
    parent -> seg_link [type=hinge, axis_angle="0 1 0 -90", joint_axis="1 0 0"];
    seg_link -> child [id="child_edges"];
  }
}

digraph make_right_roll_segment {
  subgraph L {
    segment [label="segment"];
    parent -> segment;
    segment -> child [id="child_edges"];
  }

  subgraph R {
    seg_link [label="segment_link"];
    parent -> seg_link [type=hinge, axis_angle="0 1 0 90", joint_axis="1 0 0"];
    seg_link -> child [id="child_edges"];
  }
}

digraph make_swing_segment {
  subgraph L {
    segment [label="segment"];
    parent -> segment;
    segment -> child [id="child_edges"];
  }

  subgraph R {
    seg_link [label="segment_link"];
    parent -> seg_link [type=hinge, joint_axis="0 1 0", color="0 0.5 0"];
    seg_link -> child [id="child_edges"];
  }
}

digraph make_acute_lift_segment {
  subgraph L {
    segment [label="segment"];
    parent -> segment;
    segment -> child [id="child_edges"];
  }

  subgraph R {
    seg_link [label="segment_link"];
    parent -> seg_link [type=hinge, axis_angle="0 0 1 120", joint_axis="0 0 1"];
    seg_link -> child [id="child_edges"];
  }
}

digraph make_obtuse_lift_segment {
  subgraph L {
    segment [label="segment"];
    parent -> segment;
    segment -> child [id="child_edges"];
  }

  subgraph R {
    seg_link [label="segment_link"];
    parent -> seg_link [type=hinge, axis_angle="0 0 1 60", joint_axis="0 0 1"];
    seg_link -> child [id="child_edges"];
  }
}

digraph make_backwards_lift_segment {
  subgraph L {
    segment [label="segment"];
    parent -> segment;
    segment -> child [id="child_edges"];
  }

  subgraph R {
    seg_link [label="segment_link"];
    parent -> seg_link [type=hinge, axis_angle="0 0 1 -60", joint_axis="0 0 1"];
    seg_link -> child [id="child_edges"];
  }
}

digraph make_normal_segment_link {
  subgraph L {
    seg_link [label="segment_link"];
    parent -> seg_link [id="parent_edges"];
    seg_link -> child [id="child_edges"];
  }

  subgraph R {
    link [shape=capsule, length=0.1, radius=0.025];
    parent -> link [id="parent_edges"];
    link -> child [id="child_edges"];
  }
}

digraph make_long_segment_link {
  subgraph L {
    seg_link [label="segment_link"];
    parent -> seg_link [id="parent_edges"];
    seg_link -> child [id="child_edges"];
  }

  subgraph R {
    link [shape=capsule, length=0.15, radius=0.025];
    parent -> link [id="parent_edges"];
    link -> child [id="child_edges"];
  }
}
